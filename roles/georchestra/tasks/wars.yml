- name: install curl and unzip
  apt: pkg={{ item }} state=installed
  with_items:
  - curl
  - unzip

- name: fetch WARs
#  get_url:
#    dest: /tmp/{{item}}.war
#    validate_certs: no
#    url: https://sdi.georchestra.org/ci/job/georchestra-template/lastSuccessfulBuild/artifact/{{ item.url }}/target/{{ item.name }}-template.war
  command: >
    curl -o /tmp/{{ item.key }}.war https://sdi.georchestra.org/ci/job/{{ item.value.job }}/lastSuccessfulBuild/artifact/{{ item.value.url }}/target/{{ item.key }}-template.war
    creates=/tmp/{{ item.key }}.war
  with_dict: georchestra_wars
  when: item.job is defined

- name: copy cadastrapp WAR
  synchronize: >
    src=/root/src/cadastrapp/cadastrapp/cadastrapp/target/cadastrapp-1.1-SNAPSHOT.war
    dest=/tmp/cadastrapp.war
    archive=yes
  delegate_to: web-wheezy

- name: create destdir
  file: dest=/srv/tomcat/{{ item.value.tomcat }}/webapps/{{ item.key }} owner=tomcat8 state=directory
  with_dict: georchestra_wars

- name: unzip WARs
  sudo: yes
  sudo_user: tomcat8
  unarchive:
    src: /tmp/{{ item.key }}.war
    dest: /srv/tomcat/{{ item.value.tomcat }}/webapps/{{ item.key }}
    copy: no
    creates: /srv/tomcat/{{ item.value.tomcat }}/webapps/{{ item.key }}/WEB-INF
  with_dict: georchestra_wars
